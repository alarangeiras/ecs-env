name: release
on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: build
        run: |
          npm ci
          npm run build --prod

      - name: publish tag
        id: publish_tag
        run: |
          npm --no-git-tag-version --allow-same-version version $(npm view ecs-env version)
          echo ::set-output name=tag_name::$(npm --no-git-tag-version version patch)

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish_tag.outputs.tag_name }}
          release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Linux)
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-linux
          asset_name: ecs-env-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-macos
          asset_name: ecs-env-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset (Windows)
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-win.exe
          asset_name: ecs-env-win.exe
          asset_content_type: application/octet-stream

  npm-publish:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: 12
            registry-url: https://registry.npmjs.org/
        - name: config git
          run: |
            git config --global user.name "Github Actions"
            git config --global user.email github@local

        - name: install
          run: npm ci
        
        - name: patch version
          run: |
            npm --no-git-tag-version --allow-same-version version $(npm view ecs-env version)
            npm --no-git-tag-version version patch

        - name: publish npm package
          run: npm publish --access public
          env:
            NODE_AUTH_TOKEN: ${{secrets.NPM_KEY}}    

        - name: update version in repository
          run: |
            git add .
            git commit -m "GITHUB: update version"
            git push --force origin master          

