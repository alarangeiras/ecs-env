name: release
on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npm ci
      - run: npm run build
      - name: Temporarily save artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: build/
          retention-days: 1

  generate-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: publish tag
        id: publish_tag
        run: |
          git push --follow-tags
          echo ::set-output name=tag_name::$(uuidgen)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.publish_tag.outputs.tag_name }}
          release_name: Release ${{ steps.publish_tag.outputs.tag_name }}
          draft: false
          prerelease: false
      - name: Retrieve artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifacts
          path: build/
      - name: Upload Release Asset (Linux)
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-linux
          asset_name: ecs-env-linux
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (MacOS)
        id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-macos
          asset_name: ecs-env-macos
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (Windows)
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/ecs-env-win.exe
          asset_name: ecs-env-win.exe
          asset_content_type: application/octet-stream
